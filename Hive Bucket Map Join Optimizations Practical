# Hive Join Optimizations

Hive Join Optimizations:
3 important kind of join optimizations:
1.	Map Side Join (is very important)
2.	Bucket Map Join
3.	SMB (Sort Merge Bucket Join)

•	There is no reduce phase. The entire joining activity will happen at the mapper end.

Can we always have a join as map side join?
However if certain criteria matches then we go for mapside join.

We want to join 2 tables
•	Out of 2 tables, one table should be smaller so that it can fit in memory of datanode.

We want to join 3 or more tables
•	All the tables except one are smaller to fit in memory 

Consider we have 2 tables
1.	Orders
2.	Customers
One of them is big table and other is small table


In mysql in cloudera there is a database called as retail_db
This database has orders and customers table
We need to get data from these 2 tables which are available in mysql and we want to import it to hdfs.

1.	Sqoop Import to get orders and customers data in hdfs.
2.	Create hive external tables on top of this hdfs data.

#Importing the 2 datasets orders and customers from mysql located in retail_db database
sqoop import \
--connect jdbc:mysql://quickstart.cloudera:3306/retail_db \
--username retail_dba \
--password cloudera \
--table orders \
--warehouse-dir /user/cloudera

sqoop import \
--connect jdbc:mysql://quickstart.cloudera:3306/retail_db \
--username retail_dba \
--password cloudera \
--table customers \
--warehouse-dir /user/cloudera


