
# Partitioning with 2 Columns

Countries 

Country = India  
  State = UP 
  State = Delhi

Country = US 
  State = CA 
  State = NY

# First, Set Hive Properties to allow Dynamic Partitioning
SET hive.exec.dynamic.partition=true;
SET hive.exec.dynamic.partition.mode = nonstrict;

3 Step Process:

Create a non partitioned table within trendytech database:

Step-1: Creating a normal table and loading the data

create table orders_no_partition1 (
id string,
customer_id string,
product_id string,
quantity int,
amount double,
zipcode char(5),
country char(2),
state char(2)
)
row format delimited fields terminated by ',';

hive> create table orders_no_partition1 (
    > id string,
    > customer_id string,
    > product_id string,
    > quantity int,
    > amount double,
    > zipcode char(5),
    > country char(2),
    > state char(2)
    > )
    > row format delimited fields terminated by ',';
OK
Time taken: 0.348 seconds


# Load data into non partitioned table:

load data local inpath
'/home/cloudera/Downloads/orders_country_w_states.csv'
into table orders_no_partition1;

[cloudera@quickstart Downloads]$ cat orders_country_w_states.csv;
o1,c1,p1,1,379.99,90210,US,CA
o2,c2,p2,1,8.99,90002,US,CA
o3,c33,p100,1,100,94305,US,TX
o4,c444,p992,1,669,94304,US,TX
o1,c11,p4,1,12,91410,UK,JI
o2,c12,p6,1,5,91552,UK,JI
o3,c13,p80,1,70,91226,UK,JJ
o4,c14,p92,1,58,92000,UK,JJ


hive> load data local inpath
    > '/home/cloudera/Downloads/orders_country_w_states.csv'
    > into table orders_no_partition1;
Loading data to table trendytech.orders_no_partition1
Table trendytech.orders_no_partition1 stats: [numFiles=1, totalSize=228]
OK
Time taken: 0.493 seconds

[cloudera@quickstart Downloads]$ hadoop fs -ls /user/hive/warehouse/trendytech.db/orders_no_partition1
Found 1 items
-rwxrwxrwx   1 cloudera supergroup        228 2022-10-07 21:44 /user/hive/warehouse/trendytech.db/orders_no_partition1/orders_country_w_states.csv
[cloudera@quickstart Downloads]$ 



